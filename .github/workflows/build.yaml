name: ph-ee-connector-tnm

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
      - release/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get Revision
      id: get_revision
      run: echo "::set-output name=revision::$(date +%s)"

    - name: Set Build version and image tag
      id: set_version
      run: |
        VERSION_TAG=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
        echo "::set-output name=VERSION_TAG::$VERSION_TAG"

        IMAGE_TAGS="${VERSION_TAG}.$(date '+%Y.%m.%d').${{ steps.get_revision.outputs.revision }}"
        echo "::set-output name=IMAGE_SEMANTIC_HASH::$IMAGE_TAGS"
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then IMAGE_TAGS="$IMAGE_TAGS,latest"; fi;
        echo "::set-output name=IMAGE_TAGS::$IMAGE_TAGS"

    - name: MegaLinter analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "This is a PR build, scanning delta only"
          export VALIDATE_ALL_CODEBASE=false
          export GITHUB_SHA=$(git log -1 --pretty=%B | sed -e 's/^Merge //' -e 's/ into.*//')
        else
          echo "This is a regular build"
          export VALIDATE_ALL_CODEBASE=true
          export GITHUB_SHA=${{ github.sha }}
        fi
        echo "VALIDATE_ALL_CODEBASE=${VALIDATE_ALL_CODEBASE}"
        echo "GITHUB_SHA=${GITHUB_SHA}"

        docker run -v "${{ github.workspace }}:/tmp/lint" \
          -e GITHUB_TOKEN \
          -e VALIDATE_ALL_CODEBASE \
          -e APPLY_FIXES=none \
          -e GITHUB_STATUS_REPORTER=true \
          -e GITHUB_COMMENT_REPORTER=true \
          -e CI=true \
          -e GITHUB_REF="${{ github.ref }}" \
          -e GITHUB_REPOSITORY="${{ github.repository }}" \
          -e GITHUB_TARGET_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -e GITHUB_SHA \
          oxsecurity/megalinter-cupcake:latest

    - name: Login to Azure registry
      uses: docker/login-action@v3.3.0
      with:
        registry: oaftech.azurecr.io
        username: ${{ vars.ACR_PULL_USERNAME }}
        password: ${{ secrets.ACR_PULL_PASSWORD }}

    - name: Build and push image to container registry
      if: ${{ success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/')) }}
      run: |
        docker build -t azurecr-oaf.azurecr.io/oneacrefund/tnm-connector:${{ steps.set_version.outputs.IMAGE_TAGS }} -f ${{ github.workspace }}/Dockerfile .
        docker push azurecr-oaf.azurecr.io/oneacrefund/tnm-connector:${{ steps.set_version.outputs.IMAGE_TAGS }}

    - name: Publish configuration package
      if: ${{ success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/')) }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact
        cp -r ${{ github.workspace }}/* ${{ github.workspace }}/artifact/
        echo "Artifact published"