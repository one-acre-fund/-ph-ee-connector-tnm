name: ph-ee-connector-tnm

on:
  push:
    branches:
      - main
      - develop
      - "release/*"
  pull_request:
    branches:
      - main
      - develop
      - "release/*"

env:
  SHOULD_PUBLISH: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release') }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Set up Java Version
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Get Revision
      run: echo "REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Generate image tags
      run: |
        VERSION_TAG=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
        IMAGE_TAGS="${VERSION_TAG}.$(date '+%Y.%m.%d').${REVISION}"
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then IMAGE_TAGS="$VERSION_TAG"; fi
        echo "IMAGE_TAGS=$IMAGE_TAGS" >> $GITHUB_ENV
        
    # - name: Gradlew build
    #   run: |
    #     ./gradlew bootJar --info --build-cache 

    # - name: Gradlew test
    #   run: |
    #     ./gradlew test --info --build-cache

    - name: MegaLinter analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "This is a PR build, scanning delta only"
          export VALIDATE_ALL_CODEBASE=false
          export GITHUB_SHA=$(git log -1 --pretty=%B | sed -e 's/^Merge //' -e 's/ into.*//')
        else
          echo "This is a regular build"
          export VALIDATE_ALL_CODEBASE=true
          export GITHUB_SHA=${{ github.sha }}
        fi
        echo "VALIDATE_ALL_CODEBASE=${VALIDATE_ALL_CODEBASE}"
        echo "GITHUB_SHA=${GITHUB_SHA}"

        docker run -v "${{ github.workspace }}:/tmp/lint" \
          -e GITHUB_TOKEN \
          -e VALIDATE_ALL_CODEBASE \
          -e APPLY_FIXES=none \
          -e GITHUB_STATUS_REPORTER=true \
          -e GITHUB_COMMENT_REPORTER=true \
          -e CI=true \
          -e GITHUB_REF="${{ github.ref }}" \
          -e GITHUB_REPOSITORY="${{ github.repository }}" \
          -e GITHUB_TARGET_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -e GITHUB_SHA \
          oxsecurity/megalinter-cupcake:latest

    - name: Login to Azure registry
      uses: docker/login-action@v1
      if: ${{ env.SHOULD_PUBLISH == 'true'}}
      with:
        registry: oaftech.azurecr.io
        username: ${{ vars.ACR_PULL_USERNAME }}
        password: ${{ secrets.ACR_PULL_PASSWORD }}
  
    - name: Build image
      run: docker build . -t oaftech.azurecr.io/oneacrefund/ph-ee-connector-tnm:${{ env.IMAGE_TAGS }}
  
    - name: Push image to registry
      if: ${{ env.SHOULD_PUBLISH == 'true'}}
      run: |
        docker push oaftech.azurecr.io/oneacrefund/ph-ee-connector-tnm:${{ env.IMAGE_TAGS }}
